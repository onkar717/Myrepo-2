{"id":"node_modules/autoprefixer/lib/value.js","dependencies":[{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/package.json","includedInParent":true,"mtime":1700575589017},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/.babelrc","includedInParent":true,"mtime":1699718964356},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1699760093511},{"name":"postcss","loc":{"line":7,"column":21,"index":545},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/value.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/postcss/lib/postcss.js"},{"name":"./prefixer","loc":{"line":9,"column":23,"index":588},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/value.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/prefixer.js"},{"name":"./old-value","loc":{"line":11,"column":23,"index":627},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/value.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/old-value.js"},{"name":"./utils","loc":{"line":13,"column":20,"index":664},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/value.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/utils.js"}],"generated":{"js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nvar vendor = require('postcss').vendor;\n\nvar Prefixer = require('./prefixer');\n\nvar OldValue = require('./old-value');\n\nvar utils = require('./utils');\n\nvar Value = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Value, _Prefixer);\n\n  function Value() {\n    return _Prefixer.apply(this, arguments) || this;\n  }\n\n  /**\n     * Clone decl for each prefixed values\n     */\n  Value.save = function save(prefixes, decl) {\n    var _this = this;\n\n    var prop = decl.prop;\n    var result = [];\n\n    var _loop = function _loop(prefix) {\n      var value = decl._autoprefixerValues[prefix];\n\n      if (value === decl.value) {\n        return \"continue\";\n      }\n\n      var item = void 0;\n      var propPrefix = vendor.prefix(prop);\n\n      if (propPrefix === '-pie-') {\n        return \"continue\";\n      }\n\n      if (propPrefix === prefix) {\n        item = decl.value = value;\n        result.push(item);\n        return \"continue\";\n      }\n\n      var prefixed = prefixes.prefixed(prop, prefix);\n      var rule = decl.parent;\n\n      if (!rule.every(function (i) {\n        return i.prop !== prefixed;\n      })) {\n        result.push(item);\n        return \"continue\";\n      }\n\n      var trimmed = value.replace(/\\s+/, ' ');\n      var already = rule.some(function (i) {\n        return i.prop === decl.prop && i.value.replace(/\\s+/, ' ') === trimmed;\n      });\n\n      if (already) {\n        result.push(item);\n        return \"continue\";\n      }\n\n      var cloned = _this.clone(decl, {\n        value: value\n      });\n\n      item = decl.parent.insertBefore(decl, cloned);\n      result.push(item);\n    };\n\n    for (var prefix in decl._autoprefixerValues) {\n      var _ret = _loop(prefix);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    return result;\n  }\n  /**\n     * Is declaration need to be prefixed\n     */\n  ;\n\n  var _proto = Value.prototype;\n\n  _proto.check = function check(decl) {\n    var value = decl.value;\n\n    if (!value.includes(this.name)) {\n      return false;\n    }\n\n    return !!value.match(this.regexp());\n  }\n  /**\n     * Lazy regexp loading\n     */\n  ;\n\n  _proto.regexp = function regexp() {\n    return this.regexpCache || (this.regexpCache = utils.regexp(this.name));\n  }\n  /**\n     * Add prefix to values in string\n     */\n  ;\n\n  _proto.replace = function replace(string, prefix) {\n    return string.replace(this.regexp(), \"$1\" + prefix + \"$2\");\n  }\n  /**\n     * Get value with comments if it was not changed\n     */\n  ;\n\n  _proto.value = function value(decl) {\n    if (decl.raws.value && decl.raws.value.value === decl.value) {\n      return decl.raws.value.raw;\n    } else {\n      return decl.value;\n    }\n  }\n  /**\n     * Save values with next prefixed token\n     */\n  ;\n\n  _proto.add = function add(decl, prefix) {\n    if (!decl._autoprefixerValues) {\n      decl._autoprefixerValues = {};\n    }\n\n    var value = decl._autoprefixerValues[prefix] || this.value(decl);\n    var before;\n\n    do {\n      before = value;\n      value = this.replace(value, prefix);\n      if (value === false) return;\n    } while (value !== before);\n\n    decl._autoprefixerValues[prefix] = value;\n  }\n  /**\n     * Return function to fast find prefixed value\n     */\n  ;\n\n  _proto.old = function old(prefix) {\n    return new OldValue(this.name, prefix + this.name);\n  };\n\n  return Value;\n}(Prefixer);\n\nmodule.exports = Value;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/autoprefixer/lib/value.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}}],"sources":{"node_modules/autoprefixer/lib/value.js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nvar vendor = require('postcss').vendor;\n\nvar Prefixer = require('./prefixer');\n\nvar OldValue = require('./old-value');\n\nvar utils = require('./utils');\n\nvar Value = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Value, _Prefixer);\n\n  function Value() {\n    return _Prefixer.apply(this, arguments) || this;\n  }\n\n  /**\n     * Clone decl for each prefixed values\n     */\n  Value.save = function save(prefixes, decl) {\n    var _this = this;\n\n    var prop = decl.prop;\n    var result = [];\n\n    var _loop = function _loop(prefix) {\n      var value = decl._autoprefixerValues[prefix];\n\n      if (value === decl.value) {\n        return \"continue\";\n      }\n\n      var item = void 0;\n      var propPrefix = vendor.prefix(prop);\n\n      if (propPrefix === '-pie-') {\n        return \"continue\";\n      }\n\n      if (propPrefix === prefix) {\n        item = decl.value = value;\n        result.push(item);\n        return \"continue\";\n      }\n\n      var prefixed = prefixes.prefixed(prop, prefix);\n      var rule = decl.parent;\n\n      if (!rule.every(function (i) {\n        return i.prop !== prefixed;\n      })) {\n        result.push(item);\n        return \"continue\";\n      }\n\n      var trimmed = value.replace(/\\s+/, ' ');\n      var already = rule.some(function (i) {\n        return i.prop === decl.prop && i.value.replace(/\\s+/, ' ') === trimmed;\n      });\n\n      if (already) {\n        result.push(item);\n        return \"continue\";\n      }\n\n      var cloned = _this.clone(decl, {\n        value: value\n      });\n\n      item = decl.parent.insertBefore(decl, cloned);\n      result.push(item);\n    };\n\n    for (var prefix in decl._autoprefixerValues) {\n      var _ret = _loop(prefix);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    return result;\n  }\n  /**\n     * Is declaration need to be prefixed\n     */\n  ;\n\n  var _proto = Value.prototype;\n\n  _proto.check = function check(decl) {\n    var value = decl.value;\n\n    if (!value.includes(this.name)) {\n      return false;\n    }\n\n    return !!value.match(this.regexp());\n  }\n  /**\n     * Lazy regexp loading\n     */\n  ;\n\n  _proto.regexp = function regexp() {\n    return this.regexpCache || (this.regexpCache = utils.regexp(this.name));\n  }\n  /**\n     * Add prefix to values in string\n     */\n  ;\n\n  _proto.replace = function replace(string, prefix) {\n    return string.replace(this.regexp(), \"$1\" + prefix + \"$2\");\n  }\n  /**\n     * Get value with comments if it was not changed\n     */\n  ;\n\n  _proto.value = function value(decl) {\n    if (decl.raws.value && decl.raws.value.value === decl.value) {\n      return decl.raws.value.raw;\n    } else {\n      return decl.value;\n    }\n  }\n  /**\n     * Save values with next prefixed token\n     */\n  ;\n\n  _proto.add = function add(decl, prefix) {\n    if (!decl._autoprefixerValues) {\n      decl._autoprefixerValues = {};\n    }\n\n    var value = decl._autoprefixerValues[prefix] || this.value(decl);\n    var before;\n\n    do {\n      before = value;\n      value = this.replace(value, prefix);\n      if (value === false) return;\n    } while (value !== before);\n\n    decl._autoprefixerValues[prefix] = value;\n  }\n  /**\n     * Return function to fast find prefixed value\n     */\n  ;\n\n  _proto.old = function old(prefix) {\n    return new OldValue(this.name, prefix + this.name);\n  };\n\n  return Value;\n}(Prefixer);\n\nmodule.exports = Value;"},"lineCount":164}},"error":null,"hash":"4b169a26275313dc1ae6fd2c3005ee33","cacheData":{"env":{}}}