{"id":"src/Notes/Notes.js","dependencies":[{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Sayuk_Proj/.babelrc","includedInParent":true,"mtime":1699718964356},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Sayuk_Proj/package.json","includedInParent":true,"mtime":1700804078425}],"generated":{"js":"// import React, { useState } from \"react\";\n// import { useReducer } from \"react\";\n// // import { Notestore } from '../reducer/reducer'\n\n// const Notestore = (state, action) => {\n//   switch (action.type) {\n//     case \"Add_to_Notes\":\n//       return [...state, action.payload];\n//     // case \"Remove_to_Notes\":\n//     //     return {\n//     //         ...state ,\n//     //         StoreNotes: state.StoreNotes.filter((item ) => item.id !== action.payload.id)\n//     //     }\n//     default:\n//       state;\n//   }\n// };\n\n// const Notes = () => {\n//   const [inputvalue, setinputValue] = useState(\"\");\n//   const [state, dispatch] = useReducer(Notestore, []);\n\n//   const handelfunc = () => {\n//     if (inputvalue.trim() !== \"\") {\n//       dispatch({ type: \"Add_to_Notes\", payload: inputvalue });\n//     }\n//     setinputValue('');\n//   };\n\n//   return (\n//     <div className=\" text-center bg-gray-300 w-96\">\n//       <div>\n//         {state.map((item, index) => (\n//           <li key={index}>{item}</li>\n//         ))}\n//       </div>\n//       <div>\n//         <input type=\"text\" className=\"h-10 w-80 mt-96\" onChange={(e) => setinputValue(e.target.value)} />\n//         <button className=\"bg-black text-white p-2\" onClick={handelfunc}>Save</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Notes;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/Notes/Notes.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"src/Notes/Notes.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"src/Notes/Notes.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"src/Notes/Notes.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"src/Notes/Notes.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"src/Notes/Notes.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"src/Notes/Notes.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"src/Notes/Notes.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"src/Notes/Notes.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"src/Notes/Notes.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"src/Notes/Notes.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"src/Notes/Notes.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"src/Notes/Notes.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"src/Notes/Notes.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":0},"source":"src/Notes/Notes.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"src/Notes/Notes.js","original":{"line":17,"column":0}},{"generated":{"line":19,"column":0},"source":"src/Notes/Notes.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"src/Notes/Notes.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"src/Notes/Notes.js","original":{"line":21,"column":0}},{"generated":{"line":23,"column":0},"source":"src/Notes/Notes.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"src/Notes/Notes.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"src/Notes/Notes.js","original":{"line":25,"column":0}},{"generated":{"line":26,"column":0},"source":"src/Notes/Notes.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"src/Notes/Notes.js","original":{"line":27,"column":0}},{"generated":{"line":28,"column":0},"source":"src/Notes/Notes.js","original":{"line":28,"column":0}},{"generated":{"line":30,"column":0},"source":"src/Notes/Notes.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"src/Notes/Notes.js","original":{"line":31,"column":0}},{"generated":{"line":32,"column":0},"source":"src/Notes/Notes.js","original":{"line":32,"column":0}},{"generated":{"line":33,"column":0},"source":"src/Notes/Notes.js","original":{"line":33,"column":0}},{"generated":{"line":34,"column":0},"source":"src/Notes/Notes.js","original":{"line":34,"column":0}},{"generated":{"line":35,"column":0},"source":"src/Notes/Notes.js","original":{"line":35,"column":0}},{"generated":{"line":36,"column":0},"source":"src/Notes/Notes.js","original":{"line":36,"column":0}},{"generated":{"line":37,"column":0},"source":"src/Notes/Notes.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"src/Notes/Notes.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"src/Notes/Notes.js","original":{"line":39,"column":0}},{"generated":{"line":40,"column":0},"source":"src/Notes/Notes.js","original":{"line":40,"column":0}},{"generated":{"line":41,"column":0},"source":"src/Notes/Notes.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"src/Notes/Notes.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"src/Notes/Notes.js","original":{"line":43,"column":0}},{"generated":{"line":45,"column":0},"source":"src/Notes/Notes.js","original":{"line":45,"column":0}}],"sources":{"src/Notes/Notes.js":"// import React, { useState } from \"react\";\n// import { useReducer } from \"react\";\n// // import { Notestore } from '../reducer/reducer'\n\n// const Notestore = (state, action) => {\n//   switch (action.type) {\n//     case \"Add_to_Notes\":\n//       return [...state, action.payload];\n//     // case \"Remove_to_Notes\":\n//     //     return {\n//     //         ...state ,\n//     //         StoreNotes: state.StoreNotes.filter((item ) => item.id !== action.payload.id)\n//     //     }\n//     default:\n//       state;\n//   }\n// };\n\n// const Notes = () => {\n//   const [inputvalue, setinputValue] = useState(\"\");\n//   const [state, dispatch] = useReducer(Notestore, []);\n\n//   const handelfunc = () => {\n//     if (inputvalue.trim() !== \"\") {\n//       dispatch({ type: \"Add_to_Notes\", payload: inputvalue });\n//     }\n//     setinputValue('');\n//   };\n\n//   return (\n//     <div className=\" text-center bg-gray-300 w-96\">\n//       <div>\n//         {state.map((item, index) => (\n//           <li key={index}>{item}</li>\n//         ))}\n//       </div>\n//       <div>\n//         <input type=\"text\" className=\"h-10 w-80 mt-96\" onChange={(e) => setinputValue(e.target.value)} />\n//         <button className=\"bg-black text-white p-2\" onClick={handelfunc}>Save</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Notes;\n"},"lineCount":null}},"error":null,"hash":"1d14a2ef4619650c182b57e6ba36103f","cacheData":{"env":{}}}