{"id":"node_modules/autoprefixer/lib/selector.js","dependencies":[{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/package.json","includedInParent":true,"mtime":1700575589017},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/.babelrc","includedInParent":true,"mtime":1699718964356},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1699760093511},{"name":"postcss","loc":{"line":13,"column":23,"index":1756},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/selector.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/postcss/lib/postcss.js"},{"name":"./old-selector","loc":{"line":16,"column":26,"index":1821},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/selector.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/old-selector.js"},{"name":"./prefixer","loc":{"line":18,"column":23,"index":1864},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/selector.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/prefixer.js"},{"name":"./browsers","loc":{"line":20,"column":23,"index":1903},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/selector.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/browsers.js"},{"name":"./utils","loc":{"line":22,"column":20,"index":1939},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/selector.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/utils.js"}],"generated":{"js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nvar _require = require('postcss'),\n    list = _require.list;\n\nvar OldSelector = require('./old-selector');\n\nvar Prefixer = require('./prefixer');\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar Selector = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Selector, _Prefixer);\n\n  function Selector(name, prefixes, all) {\n    var _this;\n\n    _this = _Prefixer.call(this, name, prefixes, all) || this;\n    _this.regexpCache = {};\n    return _this;\n  }\n  /**\n     * Is rule selectors need to be prefixed\n     */\n\n\n  var _proto = Selector.prototype;\n\n  _proto.check = function check(rule) {\n    if (rule.selector.includes(this.name)) {\n      return !!rule.selector.match(this.regexp());\n    }\n\n    return false;\n  }\n  /**\n     * Return prefixed version of selector\n     */\n  ;\n\n  _proto.prefixed = function prefixed(prefix) {\n    return this.name.replace(/^(\\W*)/, \"$1\" + prefix);\n  }\n  /**\n     * Lazy loadRegExp for name\n     */\n  ;\n\n  _proto.regexp = function regexp(prefix) {\n    if (this.regexpCache[prefix]) {\n      return this.regexpCache[prefix];\n    }\n\n    var name = prefix ? this.prefixed(prefix) : this.name;\n    this.regexpCache[prefix] = new RegExp(\"(^|[^:\\\"'=])\" + utils.escapeRegexp(name), 'gi');\n    return this.regexpCache[prefix];\n  }\n  /**\n     * All possible prefixes\n     */\n  ;\n\n  _proto.possible = function possible() {\n    return Browsers.prefixes();\n  }\n  /**\n     * Return all possible selector prefixes\n     */\n  ;\n\n  _proto.prefixeds = function prefixeds(rule) {\n    var _this2 = this;\n\n    if (rule._autoprefixerPrefixeds) {\n      if (rule._autoprefixerPrefixeds[this.name]) {\n        return rule._autoprefixerPrefixeds;\n      }\n    } else {\n      rule._autoprefixerPrefixeds = {};\n    }\n\n    var prefixeds = {};\n\n    if (rule.selector.includes(',')) {\n      var ruleParts = list.comma(rule.selector);\n      var toProcess = ruleParts.filter(function (el) {\n        return el.includes(_this2.name);\n      });\n\n      var _loop = function _loop() {\n        var prefix = _step.value;\n        prefixeds[prefix] = toProcess.map(function (el) {\n          return _this2.replace(el, prefix);\n        }).join(', ');\n      };\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.possible()), _step; !(_step = _iterator()).done;) {\n        _loop();\n      }\n    } else {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.possible()), _step2; !(_step2 = _iterator2()).done;) {\n        var prefix = _step2.value;\n        prefixeds[prefix] = this.replace(rule.selector, prefix);\n      }\n    }\n\n    rule._autoprefixerPrefixeds[this.name] = prefixeds;\n    return rule._autoprefixerPrefixeds;\n  }\n  /**\n     * Is rule already prefixed before\n     */\n  ;\n\n  _proto.already = function already(rule, prefixeds, prefix) {\n    var index = rule.parent.index(rule) - 1;\n\n    while (index >= 0) {\n      var before = rule.parent.nodes[index];\n\n      if (before.type !== 'rule') {\n        return false;\n      }\n\n      var some = false;\n\n      for (var key in prefixeds[this.name]) {\n        var prefixed = prefixeds[this.name][key];\n\n        if (before.selector === prefixed) {\n          if (prefix === key) {\n            return true;\n          } else {\n            some = true;\n            break;\n          }\n        }\n      }\n\n      if (!some) {\n        return false;\n      }\n\n      index -= 1;\n    }\n\n    return false;\n  }\n  /**\n     * Replace selectors by prefixed one\n     */\n  ;\n\n  _proto.replace = function replace(selector, prefix) {\n    return selector.replace(this.regexp(), \"$1\" + this.prefixed(prefix));\n  }\n  /**\n     * Clone and add prefixes for at-rule\n     */\n  ;\n\n  _proto.add = function add(rule, prefix) {\n    var prefixeds = this.prefixeds(rule);\n\n    if (this.already(rule, prefixeds, prefix)) {\n      return;\n    }\n\n    var cloned = this.clone(rule, {\n      selector: prefixeds[this.name][prefix]\n    });\n    rule.parent.insertBefore(rule, cloned);\n  }\n  /**\n     * Return function to fast find prefixed selector\n     */\n  ;\n\n  _proto.old = function old(prefix) {\n    return new OldSelector(this, prefix);\n  };\n\n  return Selector;\n}(Prefixer);\n\nmodule.exports = Selector;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/autoprefixer/lib/selector.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}}],"sources":{"node_modules/autoprefixer/lib/selector.js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nvar _require = require('postcss'),\n    list = _require.list;\n\nvar OldSelector = require('./old-selector');\n\nvar Prefixer = require('./prefixer');\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar Selector = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Selector, _Prefixer);\n\n  function Selector(name, prefixes, all) {\n    var _this;\n\n    _this = _Prefixer.call(this, name, prefixes, all) || this;\n    _this.regexpCache = {};\n    return _this;\n  }\n  /**\n     * Is rule selectors need to be prefixed\n     */\n\n\n  var _proto = Selector.prototype;\n\n  _proto.check = function check(rule) {\n    if (rule.selector.includes(this.name)) {\n      return !!rule.selector.match(this.regexp());\n    }\n\n    return false;\n  }\n  /**\n     * Return prefixed version of selector\n     */\n  ;\n\n  _proto.prefixed = function prefixed(prefix) {\n    return this.name.replace(/^(\\W*)/, \"$1\" + prefix);\n  }\n  /**\n     * Lazy loadRegExp for name\n     */\n  ;\n\n  _proto.regexp = function regexp(prefix) {\n    if (this.regexpCache[prefix]) {\n      return this.regexpCache[prefix];\n    }\n\n    var name = prefix ? this.prefixed(prefix) : this.name;\n    this.regexpCache[prefix] = new RegExp(\"(^|[^:\\\"'=])\" + utils.escapeRegexp(name), 'gi');\n    return this.regexpCache[prefix];\n  }\n  /**\n     * All possible prefixes\n     */\n  ;\n\n  _proto.possible = function possible() {\n    return Browsers.prefixes();\n  }\n  /**\n     * Return all possible selector prefixes\n     */\n  ;\n\n  _proto.prefixeds = function prefixeds(rule) {\n    var _this2 = this;\n\n    if (rule._autoprefixerPrefixeds) {\n      if (rule._autoprefixerPrefixeds[this.name]) {\n        return rule._autoprefixerPrefixeds;\n      }\n    } else {\n      rule._autoprefixerPrefixeds = {};\n    }\n\n    var prefixeds = {};\n\n    if (rule.selector.includes(',')) {\n      var ruleParts = list.comma(rule.selector);\n      var toProcess = ruleParts.filter(function (el) {\n        return el.includes(_this2.name);\n      });\n\n      var _loop = function _loop() {\n        var prefix = _step.value;\n        prefixeds[prefix] = toProcess.map(function (el) {\n          return _this2.replace(el, prefix);\n        }).join(', ');\n      };\n\n      for (var _iterator = _createForOfIteratorHelperLoose(this.possible()), _step; !(_step = _iterator()).done;) {\n        _loop();\n      }\n    } else {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.possible()), _step2; !(_step2 = _iterator2()).done;) {\n        var prefix = _step2.value;\n        prefixeds[prefix] = this.replace(rule.selector, prefix);\n      }\n    }\n\n    rule._autoprefixerPrefixeds[this.name] = prefixeds;\n    return rule._autoprefixerPrefixeds;\n  }\n  /**\n     * Is rule already prefixed before\n     */\n  ;\n\n  _proto.already = function already(rule, prefixeds, prefix) {\n    var index = rule.parent.index(rule) - 1;\n\n    while (index >= 0) {\n      var before = rule.parent.nodes[index];\n\n      if (before.type !== 'rule') {\n        return false;\n      }\n\n      var some = false;\n\n      for (var key in prefixeds[this.name]) {\n        var prefixed = prefixeds[this.name][key];\n\n        if (before.selector === prefixed) {\n          if (prefix === key) {\n            return true;\n          } else {\n            some = true;\n            break;\n          }\n        }\n      }\n\n      if (!some) {\n        return false;\n      }\n\n      index -= 1;\n    }\n\n    return false;\n  }\n  /**\n     * Replace selectors by prefixed one\n     */\n  ;\n\n  _proto.replace = function replace(selector, prefix) {\n    return selector.replace(this.regexp(), \"$1\" + this.prefixed(prefix));\n  }\n  /**\n     * Clone and add prefixes for at-rule\n     */\n  ;\n\n  _proto.add = function add(rule, prefix) {\n    var prefixeds = this.prefixeds(rule);\n\n    if (this.already(rule, prefixeds, prefix)) {\n      return;\n    }\n\n    var cloned = this.clone(rule, {\n      selector: prefixeds[this.name][prefix]\n    });\n    rule.parent.insertBefore(rule, cloned);\n  }\n  /**\n     * Return function to fast find prefixed selector\n     */\n  ;\n\n  _proto.old = function old(prefix) {\n    return new OldSelector(this, prefix);\n  };\n\n  return Selector;\n}(Prefixer);\n\nmodule.exports = Selector;"},"lineCount":198}},"error":null,"hash":"76cbda4bdf93b41bffe72ce46a7c3e26","cacheData":{"env":{}}}