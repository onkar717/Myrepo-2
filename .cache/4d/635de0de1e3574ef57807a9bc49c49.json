{"id":"node_modules/autoprefixer/lib/hacks/gradient.js","dependencies":[{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/package.json","includedInParent":true,"mtime":1700575589017},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/.babelrc","includedInParent":true,"mtime":1699718964356},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1699760093511},{"name":"postcss-value-parser","loc":{"line":17,"column":21,"index":2133},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/node_modules/postcss-value-parser/lib/index.js"},{"name":"normalize-range","loc":{"line":19,"column":20,"index":2179},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/normalize-range/index.js"},{"name":"../old-value","loc":{"line":21,"column":23,"index":2223},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/old-value.js"},{"name":"../value","loc":{"line":23,"column":20,"index":2261},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/value.js"},{"name":"../utils","loc":{"line":25,"column":20,"index":2295},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/utils.js"}],"generated":{"js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar parser = require('postcss-value-parser');\n\nvar range = require('normalize-range');\n\nvar OldValue = require('../old-value');\n\nvar Value = require('../value');\n\nvar utils = require('../utils');\n\nvar IS_DIRECTION = /top|left|right|bottom/gi;\n\nvar Gradient = /*#__PURE__*/function (_Value) {\n  _inheritsLoose(Gradient, _Value);\n\n  function Gradient() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Value.call.apply(_Value, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"directions\", {\n      top: 'bottom',\n      left: 'right',\n      bottom: 'top',\n      right: 'left'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"oldDirections\", {\n      'top': 'left bottom, left top',\n      'left': 'right top, left top',\n      'bottom': 'left top, left bottom',\n      'right': 'left top, right top',\n      'top right': 'left bottom, right top',\n      'top left': 'right bottom, left top',\n      'right top': 'left bottom, right top',\n      'right bottom': 'left top, right bottom',\n      'bottom right': 'left top, right bottom',\n      'bottom left': 'right top, left bottom',\n      'left top': 'right bottom, left top',\n      'left bottom': 'right top, left bottom'\n    });\n\n    return _this;\n  }\n\n  var _proto = Gradient.prototype;\n\n  /**\n   * Change degrees for webkit prefix\n   */\n  _proto.replace = function replace(string, prefix) {\n    var ast = parser(string);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(ast.nodes), _step; !(_step = _iterator()).done;) {\n      var node = _step.value;\n\n      if (node.type === 'function' && node.value === this.name) {\n        node.nodes = this.newDirection(node.nodes);\n        node.nodes = this.normalize(node.nodes);\n\n        if (prefix === '-webkit- old') {\n          var changes = this.oldWebkit(node);\n\n          if (!changes) {\n            return false;\n          }\n        } else {\n          node.nodes = this.convertDirection(node.nodes);\n          node.value = prefix + node.value;\n        }\n      }\n    }\n\n    return ast.toString();\n  }\n  /**\n   * Replace first token\n   */\n  ;\n\n  _proto.replaceFirst = function replaceFirst(params) {\n    for (var _len2 = arguments.length, words = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      words[_key2 - 1] = arguments[_key2];\n    }\n\n    var prefix = words.map(function (i) {\n      if (i === ' ') {\n        return {\n          type: 'space',\n          value: i\n        };\n      }\n\n      return {\n        type: 'word',\n        value: i\n      };\n    });\n    return prefix.concat(params.slice(1));\n  }\n  /**\n   * Convert angle unit to deg\n   */\n  ;\n\n  _proto.normalizeUnit = function normalizeUnit(str, full) {\n    var num = parseFloat(str);\n    var deg = num / full * 360;\n    return deg + \"deg\";\n  }\n  /**\n   * Normalize angle\n   */\n  ;\n\n  _proto.normalize = function normalize(nodes) {\n    if (!nodes[0]) return nodes;\n\n    if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 400);\n    } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);\n    } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 1);\n    } else if (nodes[0].value.includes('deg')) {\n      var num = parseFloat(nodes[0].value);\n      num = range.wrap(0, 360, num);\n      nodes[0].value = num + \"deg\";\n    }\n\n    if (nodes[0].value === '0deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'top');\n    } else if (nodes[0].value === '90deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'right');\n    } else if (nodes[0].value === '180deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom');\n    } else if (nodes[0].value === '270deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'left');\n    }\n\n    return nodes;\n  }\n  /**\n   * Replace old direction to new\n   */\n  ;\n\n  _proto.newDirection = function newDirection(params) {\n    if (params[0].value === 'to') {\n      return params;\n    }\n\n    IS_DIRECTION.lastIndex = 0; // reset search index of global regexp\n\n    if (!IS_DIRECTION.test(params[0].value)) {\n      return params;\n    }\n\n    params.unshift({\n      type: 'word',\n      value: 'to'\n    }, {\n      type: 'space',\n      value: ' '\n    });\n\n    for (var i = 2; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        break;\n      }\n\n      if (params[i].type === 'word') {\n        params[i].value = this.revertDirection(params[i].value);\n      }\n    }\n\n    return params;\n  }\n  /**\n   * Look for at word\n   */\n  ;\n\n  _proto.isRadial = function isRadial(params) {\n    var state = 'before';\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(params), _step2; !(_step2 = _iterator2()).done;) {\n      var param = _step2.value;\n\n      if (state === 'before' && param.type === 'space') {\n        state = 'at';\n      } else if (state === 'at' && param.value === 'at') {\n        state = 'after';\n      } else if (state === 'after' && param.type === 'space') {\n        return true;\n      } else if (param.type === 'div') {\n        break;\n      } else {\n        state = 'before';\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Change new direction to old\n   */\n  ;\n\n  _proto.convertDirection = function convertDirection(params) {\n    if (params.length > 0) {\n      if (params[0].value === 'to') {\n        this.fixDirection(params);\n      } else if (params[0].value.includes('deg')) {\n        this.fixAngle(params);\n      } else if (this.isRadial(params)) {\n        this.fixRadial(params);\n      }\n    }\n\n    return params;\n  }\n  /**\n   * Replace `to top left` to `bottom right`\n   */\n  ;\n\n  _proto.fixDirection = function fixDirection(params) {\n    params.splice(0, 2);\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(params), _step3; !(_step3 = _iterator3()).done;) {\n      var param = _step3.value;\n\n      if (param.type === 'div') {\n        break;\n      }\n\n      if (param.type === 'word') {\n        param.value = this.revertDirection(param.value);\n      }\n    }\n  }\n  /**\n   * Add 90 degrees\n   */\n  ;\n\n  _proto.fixAngle = function fixAngle(params) {\n    var first = params[0].value;\n    first = parseFloat(first);\n    first = Math.abs(450 - first) % 360;\n    first = this.roundFloat(first, 3);\n    params[0].value = first + \"deg\";\n  }\n  /**\n   * Fix radial direction syntax\n   */\n  ;\n\n  _proto.fixRadial = function fixRadial(params) {\n    var first = [];\n    var second = [];\n    var a, b, c, i, next;\n\n    for (i = 0; i < params.length - 2; i++) {\n      a = params[i];\n      b = params[i + 1];\n      c = params[i + 2];\n\n      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {\n        next = i + 3;\n        break;\n      } else {\n        first.push(a);\n      }\n    }\n\n    var div;\n\n    for (i = next; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        div = params[i];\n        break;\n      } else {\n        second.push(params[i]);\n      }\n    }\n\n    params.splice.apply(params, [0, i].concat(second, [div], first));\n  };\n\n  _proto.revertDirection = function revertDirection(word) {\n    return this.directions[word.toLowerCase()] || word;\n  }\n  /**\n   * Round float and save digits under dot\n   */\n  ;\n\n  _proto.roundFloat = function roundFloat(_float, digits) {\n    return parseFloat(_float.toFixed(digits));\n  }\n  /**\n   * Convert to old webkit syntax\n   */\n  ;\n\n  _proto.oldWebkit = function oldWebkit(node) {\n    var nodes = node.nodes;\n    var string = parser.stringify(node.nodes);\n\n    if (this.name !== 'linear-gradient') {\n      return false;\n    }\n\n    if (nodes[0] && nodes[0].value.includes('deg')) {\n      return false;\n    }\n\n    if (string.includes('px') || string.includes('-corner') || string.includes('-side')) {\n      return false;\n    }\n\n    var params = [[]];\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(nodes), _step4; !(_step4 = _iterator4()).done;) {\n      var i = _step4.value;\n      params[params.length - 1].push(i);\n\n      if (i.type === 'div' && i.value === ',') {\n        params.push([]);\n      }\n    }\n\n    this.oldDirection(params);\n    this.colorStops(params);\n    node.nodes = [];\n\n    for (var _i = 0, _params = params; _i < _params.length; _i++) {\n      var param = _params[_i];\n      node.nodes = node.nodes.concat(param);\n    }\n\n    node.nodes.unshift({\n      type: 'word',\n      value: 'linear'\n    }, this.cloneDiv(node.nodes));\n    node.value = '-webkit-gradient';\n    return true;\n  }\n  /**\n   * Change direction syntax to old webkit\n   */\n  ;\n\n  _proto.oldDirection = function oldDirection(params) {\n    var div = this.cloneDiv(params[0]);\n\n    if (params[0][0].value !== 'to') {\n      return params.unshift([{\n        type: 'word',\n        value: this.oldDirections.bottom\n      }, div]);\n    } else {\n      var words = [];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(params[0].slice(2)), _step5; !(_step5 = _iterator5()).done;) {\n        var node = _step5.value;\n\n        if (node.type === 'word') {\n          words.push(node.value.toLowerCase());\n        }\n      }\n\n      words = words.join(' ');\n      var old = this.oldDirections[words] || words;\n      params[0] = [{\n        type: 'word',\n        value: old\n      }, div];\n      return params[0];\n    }\n  }\n  /**\n   * Get div token from exists parameters\n   */\n  ;\n\n  _proto.cloneDiv = function cloneDiv(params) {\n    for (var _iterator6 = _createForOfIteratorHelperLoose(params), _step6; !(_step6 = _iterator6()).done;) {\n      var i = _step6.value;\n\n      if (i.type === 'div' && i.value === ',') {\n        return i;\n      }\n    }\n\n    return {\n      type: 'div',\n      value: ',',\n      after: ' '\n    };\n  }\n  /**\n   * Change colors syntax to old webkit\n   */\n  ;\n\n  _proto.colorStops = function colorStops(params) {\n    var result = [];\n\n    for (var i = 0; i < params.length; i++) {\n      var pos = void 0;\n      var param = params[i];\n      var item = void 0;\n\n      if (i === 0) {\n        continue;\n      }\n\n      var color = parser.stringify(param[0]);\n\n      if (param[1] && param[1].type === 'word') {\n        pos = param[1].value;\n      } else if (param[2] && param[2].type === 'word') {\n        pos = param[2].value;\n      }\n\n      var stop = void 0;\n\n      if (i === 1 && (!pos || pos === '0%')) {\n        stop = \"from(\" + color + \")\";\n      } else if (i === params.length - 1 && (!pos || pos === '100%')) {\n        stop = \"to(\" + color + \")\";\n      } else if (pos) {\n        stop = \"color-stop(\" + pos + \", \" + color + \")\";\n      } else {\n        stop = \"color-stop(\" + color + \")\";\n      }\n\n      var div = param[param.length - 1];\n      params[i] = [{\n        type: 'word',\n        value: stop\n      }];\n\n      if (div.type === 'div' && div.value === ',') {\n        item = params[i].push(div);\n      }\n\n      result.push(item);\n    }\n\n    return result;\n  }\n  /**\n   * Remove old WebKit gradient too\n   */\n  ;\n\n  _proto.old = function old(prefix) {\n    if (prefix === '-webkit-') {\n      var type = this.name === 'linear-gradient' ? 'linear' : 'radial';\n      var string = '-gradient';\n      var regexp = utils.regexp(\"-webkit-(\" + type + \"-gradient|gradient\\\\(\\\\s*\" + type + \")\", false);\n      return new OldValue(this.name, prefix + this.name, string, regexp);\n    } else {\n      return _Value.prototype.old.call(this, prefix);\n    }\n  }\n  /**\n   * Do not add non-webkit prefixes for list-style and object\n   */\n  ;\n\n  _proto.add = function add(decl, prefix) {\n    var p = decl.prop;\n\n    if (p.includes('mask')) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return _Value.prototype.add.call(this, decl, prefix);\n      }\n    } else if (p === 'list-style' || p === 'list-style-image' || p === 'content') {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return _Value.prototype.add.call(this, decl, prefix);\n      }\n    } else {\n      return _Value.prototype.add.call(this, decl, prefix);\n    }\n\n    return undefined;\n  };\n\n  return Gradient;\n}(Value);\n\n_defineProperty(Gradient, \"names\", ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient']);\n\nmodule.exports = Gradient;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}}],"sources":{"node_modules/autoprefixer/lib/hacks/gradient.js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar parser = require('postcss-value-parser');\n\nvar range = require('normalize-range');\n\nvar OldValue = require('../old-value');\n\nvar Value = require('../value');\n\nvar utils = require('../utils');\n\nvar IS_DIRECTION = /top|left|right|bottom/gi;\n\nvar Gradient = /*#__PURE__*/function (_Value) {\n  _inheritsLoose(Gradient, _Value);\n\n  function Gradient() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Value.call.apply(_Value, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"directions\", {\n      top: 'bottom',\n      left: 'right',\n      bottom: 'top',\n      right: 'left'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"oldDirections\", {\n      'top': 'left bottom, left top',\n      'left': 'right top, left top',\n      'bottom': 'left top, left bottom',\n      'right': 'left top, right top',\n      'top right': 'left bottom, right top',\n      'top left': 'right bottom, left top',\n      'right top': 'left bottom, right top',\n      'right bottom': 'left top, right bottom',\n      'bottom right': 'left top, right bottom',\n      'bottom left': 'right top, left bottom',\n      'left top': 'right bottom, left top',\n      'left bottom': 'right top, left bottom'\n    });\n\n    return _this;\n  }\n\n  var _proto = Gradient.prototype;\n\n  /**\n   * Change degrees for webkit prefix\n   */\n  _proto.replace = function replace(string, prefix) {\n    var ast = parser(string);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(ast.nodes), _step; !(_step = _iterator()).done;) {\n      var node = _step.value;\n\n      if (node.type === 'function' && node.value === this.name) {\n        node.nodes = this.newDirection(node.nodes);\n        node.nodes = this.normalize(node.nodes);\n\n        if (prefix === '-webkit- old') {\n          var changes = this.oldWebkit(node);\n\n          if (!changes) {\n            return false;\n          }\n        } else {\n          node.nodes = this.convertDirection(node.nodes);\n          node.value = prefix + node.value;\n        }\n      }\n    }\n\n    return ast.toString();\n  }\n  /**\n   * Replace first token\n   */\n  ;\n\n  _proto.replaceFirst = function replaceFirst(params) {\n    for (var _len2 = arguments.length, words = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      words[_key2 - 1] = arguments[_key2];\n    }\n\n    var prefix = words.map(function (i) {\n      if (i === ' ') {\n        return {\n          type: 'space',\n          value: i\n        };\n      }\n\n      return {\n        type: 'word',\n        value: i\n      };\n    });\n    return prefix.concat(params.slice(1));\n  }\n  /**\n   * Convert angle unit to deg\n   */\n  ;\n\n  _proto.normalizeUnit = function normalizeUnit(str, full) {\n    var num = parseFloat(str);\n    var deg = num / full * 360;\n    return deg + \"deg\";\n  }\n  /**\n   * Normalize angle\n   */\n  ;\n\n  _proto.normalize = function normalize(nodes) {\n    if (!nodes[0]) return nodes;\n\n    if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 400);\n    } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);\n    } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 1);\n    } else if (nodes[0].value.includes('deg')) {\n      var num = parseFloat(nodes[0].value);\n      num = range.wrap(0, 360, num);\n      nodes[0].value = num + \"deg\";\n    }\n\n    if (nodes[0].value === '0deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'top');\n    } else if (nodes[0].value === '90deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'right');\n    } else if (nodes[0].value === '180deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom');\n    } else if (nodes[0].value === '270deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'left');\n    }\n\n    return nodes;\n  }\n  /**\n   * Replace old direction to new\n   */\n  ;\n\n  _proto.newDirection = function newDirection(params) {\n    if (params[0].value === 'to') {\n      return params;\n    }\n\n    IS_DIRECTION.lastIndex = 0; // reset search index of global regexp\n\n    if (!IS_DIRECTION.test(params[0].value)) {\n      return params;\n    }\n\n    params.unshift({\n      type: 'word',\n      value: 'to'\n    }, {\n      type: 'space',\n      value: ' '\n    });\n\n    for (var i = 2; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        break;\n      }\n\n      if (params[i].type === 'word') {\n        params[i].value = this.revertDirection(params[i].value);\n      }\n    }\n\n    return params;\n  }\n  /**\n   * Look for at word\n   */\n  ;\n\n  _proto.isRadial = function isRadial(params) {\n    var state = 'before';\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(params), _step2; !(_step2 = _iterator2()).done;) {\n      var param = _step2.value;\n\n      if (state === 'before' && param.type === 'space') {\n        state = 'at';\n      } else if (state === 'at' && param.value === 'at') {\n        state = 'after';\n      } else if (state === 'after' && param.type === 'space') {\n        return true;\n      } else if (param.type === 'div') {\n        break;\n      } else {\n        state = 'before';\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Change new direction to old\n   */\n  ;\n\n  _proto.convertDirection = function convertDirection(params) {\n    if (params.length > 0) {\n      if (params[0].value === 'to') {\n        this.fixDirection(params);\n      } else if (params[0].value.includes('deg')) {\n        this.fixAngle(params);\n      } else if (this.isRadial(params)) {\n        this.fixRadial(params);\n      }\n    }\n\n    return params;\n  }\n  /**\n   * Replace `to top left` to `bottom right`\n   */\n  ;\n\n  _proto.fixDirection = function fixDirection(params) {\n    params.splice(0, 2);\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(params), _step3; !(_step3 = _iterator3()).done;) {\n      var param = _step3.value;\n\n      if (param.type === 'div') {\n        break;\n      }\n\n      if (param.type === 'word') {\n        param.value = this.revertDirection(param.value);\n      }\n    }\n  }\n  /**\n   * Add 90 degrees\n   */\n  ;\n\n  _proto.fixAngle = function fixAngle(params) {\n    var first = params[0].value;\n    first = parseFloat(first);\n    first = Math.abs(450 - first) % 360;\n    first = this.roundFloat(first, 3);\n    params[0].value = first + \"deg\";\n  }\n  /**\n   * Fix radial direction syntax\n   */\n  ;\n\n  _proto.fixRadial = function fixRadial(params) {\n    var first = [];\n    var second = [];\n    var a, b, c, i, next;\n\n    for (i = 0; i < params.length - 2; i++) {\n      a = params[i];\n      b = params[i + 1];\n      c = params[i + 2];\n\n      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {\n        next = i + 3;\n        break;\n      } else {\n        first.push(a);\n      }\n    }\n\n    var div;\n\n    for (i = next; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        div = params[i];\n        break;\n      } else {\n        second.push(params[i]);\n      }\n    }\n\n    params.splice.apply(params, [0, i].concat(second, [div], first));\n  };\n\n  _proto.revertDirection = function revertDirection(word) {\n    return this.directions[word.toLowerCase()] || word;\n  }\n  /**\n   * Round float and save digits under dot\n   */\n  ;\n\n  _proto.roundFloat = function roundFloat(_float, digits) {\n    return parseFloat(_float.toFixed(digits));\n  }\n  /**\n   * Convert to old webkit syntax\n   */\n  ;\n\n  _proto.oldWebkit = function oldWebkit(node) {\n    var nodes = node.nodes;\n    var string = parser.stringify(node.nodes);\n\n    if (this.name !== 'linear-gradient') {\n      return false;\n    }\n\n    if (nodes[0] && nodes[0].value.includes('deg')) {\n      return false;\n    }\n\n    if (string.includes('px') || string.includes('-corner') || string.includes('-side')) {\n      return false;\n    }\n\n    var params = [[]];\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(nodes), _step4; !(_step4 = _iterator4()).done;) {\n      var i = _step4.value;\n      params[params.length - 1].push(i);\n\n      if (i.type === 'div' && i.value === ',') {\n        params.push([]);\n      }\n    }\n\n    this.oldDirection(params);\n    this.colorStops(params);\n    node.nodes = [];\n\n    for (var _i = 0, _params = params; _i < _params.length; _i++) {\n      var param = _params[_i];\n      node.nodes = node.nodes.concat(param);\n    }\n\n    node.nodes.unshift({\n      type: 'word',\n      value: 'linear'\n    }, this.cloneDiv(node.nodes));\n    node.value = '-webkit-gradient';\n    return true;\n  }\n  /**\n   * Change direction syntax to old webkit\n   */\n  ;\n\n  _proto.oldDirection = function oldDirection(params) {\n    var div = this.cloneDiv(params[0]);\n\n    if (params[0][0].value !== 'to') {\n      return params.unshift([{\n        type: 'word',\n        value: this.oldDirections.bottom\n      }, div]);\n    } else {\n      var words = [];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(params[0].slice(2)), _step5; !(_step5 = _iterator5()).done;) {\n        var node = _step5.value;\n\n        if (node.type === 'word') {\n          words.push(node.value.toLowerCase());\n        }\n      }\n\n      words = words.join(' ');\n      var old = this.oldDirections[words] || words;\n      params[0] = [{\n        type: 'word',\n        value: old\n      }, div];\n      return params[0];\n    }\n  }\n  /**\n   * Get div token from exists parameters\n   */\n  ;\n\n  _proto.cloneDiv = function cloneDiv(params) {\n    for (var _iterator6 = _createForOfIteratorHelperLoose(params), _step6; !(_step6 = _iterator6()).done;) {\n      var i = _step6.value;\n\n      if (i.type === 'div' && i.value === ',') {\n        return i;\n      }\n    }\n\n    return {\n      type: 'div',\n      value: ',',\n      after: ' '\n    };\n  }\n  /**\n   * Change colors syntax to old webkit\n   */\n  ;\n\n  _proto.colorStops = function colorStops(params) {\n    var result = [];\n\n    for (var i = 0; i < params.length; i++) {\n      var pos = void 0;\n      var param = params[i];\n      var item = void 0;\n\n      if (i === 0) {\n        continue;\n      }\n\n      var color = parser.stringify(param[0]);\n\n      if (param[1] && param[1].type === 'word') {\n        pos = param[1].value;\n      } else if (param[2] && param[2].type === 'word') {\n        pos = param[2].value;\n      }\n\n      var stop = void 0;\n\n      if (i === 1 && (!pos || pos === '0%')) {\n        stop = \"from(\" + color + \")\";\n      } else if (i === params.length - 1 && (!pos || pos === '100%')) {\n        stop = \"to(\" + color + \")\";\n      } else if (pos) {\n        stop = \"color-stop(\" + pos + \", \" + color + \")\";\n      } else {\n        stop = \"color-stop(\" + color + \")\";\n      }\n\n      var div = param[param.length - 1];\n      params[i] = [{\n        type: 'word',\n        value: stop\n      }];\n\n      if (div.type === 'div' && div.value === ',') {\n        item = params[i].push(div);\n      }\n\n      result.push(item);\n    }\n\n    return result;\n  }\n  /**\n   * Remove old WebKit gradient too\n   */\n  ;\n\n  _proto.old = function old(prefix) {\n    if (prefix === '-webkit-') {\n      var type = this.name === 'linear-gradient' ? 'linear' : 'radial';\n      var string = '-gradient';\n      var regexp = utils.regexp(\"-webkit-(\" + type + \"-gradient|gradient\\\\(\\\\s*\" + type + \")\", false);\n      return new OldValue(this.name, prefix + this.name, string, regexp);\n    } else {\n      return _Value.prototype.old.call(this, prefix);\n    }\n  }\n  /**\n   * Do not add non-webkit prefixes for list-style and object\n   */\n  ;\n\n  _proto.add = function add(decl, prefix) {\n    var p = decl.prop;\n\n    if (p.includes('mask')) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return _Value.prototype.add.call(this, decl, prefix);\n      }\n    } else if (p === 'list-style' || p === 'list-style-image' || p === 'content') {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return _Value.prototype.add.call(this, decl, prefix);\n      }\n    } else {\n      return _Value.prototype.add.call(this, decl, prefix);\n    }\n\n    return undefined;\n  };\n\n  return Gradient;\n}(Value);\n\n_defineProperty(Gradient, \"names\", ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient']);\n\nmodule.exports = Gradient;"},"lineCount":519}},"error":null,"hash":"eab2bac336a014326660cbfc14f44e8d","cacheData":{"env":{}}}