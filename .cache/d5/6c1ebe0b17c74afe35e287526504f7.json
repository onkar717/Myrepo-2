{"id":"node_modules/autoprefixer/lib/hacks/mask-border.js","dependencies":[{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/package.json","includedInParent":true,"mtime":1700575589017},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/.babelrc","includedInParent":true,"mtime":1699718964356},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1699760093511},{"name":"../declaration","loc":{"line":9,"column":26,"index":761},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/mask-border.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/declaration.js"}],"generated":{"js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Declaration = require('../declaration');\n\nvar MaskBorder = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(MaskBorder, _Declaration);\n\n  function MaskBorder() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = MaskBorder.prototype;\n\n  /**\n   * Return property name by final spec\n   */\n  _proto.normalize = function normalize() {\n    return this.name.replace('box-image', 'border');\n  }\n  /**\n   * Return flex property for 2012 spec\n   */\n  ;\n\n  _proto.prefixed = function prefixed(prop, prefix) {\n    var result = _Declaration.prototype.prefixed.call(this, prop, prefix);\n\n    if (prefix === '-webkit-') {\n      result = result.replace('border', 'box-image');\n    }\n\n    return result;\n  };\n\n  return MaskBorder;\n}(Declaration);\n\n_defineProperty(MaskBorder, \"names\", ['mask-border', 'mask-border-source', 'mask-border-slice', 'mask-border-width', 'mask-border-outset', 'mask-border-repeat', 'mask-box-image', 'mask-box-image-source', 'mask-box-image-slice', 'mask-box-image-width', 'mask-box-image-outset', 'mask-box-image-repeat']);\n\nmodule.exports = MaskBorder;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/mask-border.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/autoprefixer/lib/hacks/mask-border.js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Declaration = require('../declaration');\n\nvar MaskBorder = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(MaskBorder, _Declaration);\n\n  function MaskBorder() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = MaskBorder.prototype;\n\n  /**\n   * Return property name by final spec\n   */\n  _proto.normalize = function normalize() {\n    return this.name.replace('box-image', 'border');\n  }\n  /**\n   * Return flex property for 2012 spec\n   */\n  ;\n\n  _proto.prefixed = function prefixed(prop, prefix) {\n    var result = _Declaration.prototype.prefixed.call(this, prop, prefix);\n\n    if (prefix === '-webkit-') {\n      result = result.replace('border', 'box-image');\n    }\n\n    return result;\n  };\n\n  return MaskBorder;\n}(Declaration);\n\n_defineProperty(MaskBorder, \"names\", ['mask-border', 'mask-border-source', 'mask-border-slice', 'mask-border-width', 'mask-border-outset', 'mask-border-repeat', 'mask-box-image', 'mask-box-image-source', 'mask-box-image-slice', 'mask-box-image-width', 'mask-box-image-outset', 'mask-box-image-repeat']);\n\nmodule.exports = MaskBorder;"},"lineCount":46}},"error":null,"hash":"8167b679e786895a1d1c8cc8444e0463","cacheData":{"env":{}}}