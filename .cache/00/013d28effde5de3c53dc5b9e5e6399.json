{"id":"node_modules/autoprefixer/lib/supports.js","dependencies":[{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/package.json","includedInParent":true,"mtime":1700575589017},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/.babelrc","includedInParent":true,"mtime":1699718964356},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1699760093511},{"name":"postcss","loc":{"line":9,"column":22,"index":1246},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/supports.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/postcss/lib/postcss.js"},{"name":"caniuse-lite","loc":{"line":11,"column":19,"index":1278},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/supports.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/caniuse-lite/dist/unpacker/index.js"},{"name":"caniuse-lite/data/features/css-featurequeries.js","loc":{"line":11,"column":51,"index":1310},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/supports.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/caniuse-lite/data/features/css-featurequeries.js"},{"name":"./browsers","loc":{"line":13,"column":23,"index":1388},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/supports.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/browsers.js"},{"name":"./brackets","loc":{"line":15,"column":23,"index":1427},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/supports.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/brackets.js"},{"name":"./value","loc":{"line":17,"column":20,"index":1463},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/supports.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/value.js"},{"name":"./utils","loc":{"line":19,"column":20,"index":1496},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/supports.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/utils.js"}],"generated":{"js":"\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar postcss = require('postcss');\n\nvar data = require('caniuse-lite').feature(require('caniuse-lite/data/features/css-featurequeries.js'));\n\nvar Browsers = require('./browsers');\n\nvar brackets = require('./brackets');\n\nvar Value = require('./value');\n\nvar utils = require('./utils');\n\nvar supported = [];\n\nfor (var browser in data.stats) {\n  var versions = data.stats[browser];\n\n  for (var version in versions) {\n    var support = versions[version];\n\n    if (/y/.test(support)) {\n      supported.push(browser + ' ' + version);\n    }\n  }\n}\n\nvar Supports = /*#__PURE__*/function () {\n  function Supports(Prefixes, all) {\n    this.Prefixes = Prefixes;\n    this.all = all;\n  }\n  /**\n     * Return prefixer only with @supports supported browsers\n     */\n\n\n  var _proto = Supports.prototype;\n\n  _proto.prefixer = function prefixer() {\n    if (this.prefixerCache) {\n      return this.prefixerCache;\n    }\n\n    var filtered = this.all.browsers.selected.filter(function (i) {\n      return supported.includes(i);\n    });\n    var browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);\n    this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);\n    return this.prefixerCache;\n  }\n  /**\n     * Parse string into declaration property and value\n     */\n  ;\n\n  _proto.parse = function parse(str) {\n    var parts = str.split(':');\n    var prop = parts[0];\n    var value = parts[1];\n    if (!value) value = '';\n    return [prop.trim(), value.trim()];\n  }\n  /**\n     * Create virtual rule to process it by prefixer\n     */\n  ;\n\n  _proto.virtual = function virtual(str) {\n    var _this$parse = this.parse(str),\n        prop = _this$parse[0],\n        value = _this$parse[1];\n\n    var rule = postcss.parse('a{}').first;\n    rule.append({\n      prop: prop,\n      value: value,\n      raws: {\n        before: ''\n      }\n    });\n    return rule;\n  }\n  /**\n     * Return array of Declaration with all necessary prefixes\n     */\n  ;\n\n  _proto.prefixed = function prefixed(str) {\n    var rule = this.virtual(str);\n\n    if (this.disabled(rule.first)) {\n      return rule.nodes;\n    }\n\n    var result = {\n      warn: function warn() {\n        return null;\n      }\n    };\n    var prefixer = this.prefixer().add[rule.first.prop];\n    prefixer && prefixer.process && prefixer.process(rule.first, result);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(rule.nodes), _step; !(_step = _iterator()).done;) {\n      var decl = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.prefixer().values('add', rule.first.prop)), _step2; !(_step2 = _iterator2()).done;) {\n        var value = _step2.value;\n        value.process(decl);\n      }\n\n      Value.save(this.all, decl);\n    }\n\n    return rule.nodes;\n  }\n  /**\n     * Return true if brackets node is \"not\" word\n     */\n  ;\n\n  _proto.isNot = function isNot(node) {\n    return typeof node === 'string' && /not\\s*/i.test(node);\n  }\n  /**\n     * Return true if brackets node is \"or\" word\n     */\n  ;\n\n  _proto.isOr = function isOr(node) {\n    return typeof node === 'string' && /\\s*or\\s*/i.test(node);\n  }\n  /**\n     * Return true if brackets node is (prop: value)\n     */\n  ;\n\n  _proto.isProp = function isProp(node) {\n    return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';\n  }\n  /**\n     * Return true if prefixed property has no unprefixed\n     */\n  ;\n\n  _proto.isHack = function isHack(all, unprefixed) {\n    var check = new RegExp(\"(\\\\(|\\\\s)\" + utils.escapeRegexp(unprefixed) + \":\");\n    return !check.test(all);\n  }\n  /**\n     * Return true if we need to remove node\n     */\n  ;\n\n  _proto.toRemove = function toRemove(str, all) {\n    var _this$parse2 = this.parse(str),\n        prop = _this$parse2[0],\n        value = _this$parse2[1];\n\n    var unprefixed = this.all.unprefixed(prop);\n    var cleaner = this.all.cleaner();\n\n    if (cleaner.remove[prop] && cleaner.remove[prop].remove && !this.isHack(all, unprefixed)) {\n      return true;\n    }\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(cleaner.values('remove', unprefixed)), _step3; !(_step3 = _iterator3()).done;) {\n      var checker = _step3.value;\n\n      if (checker.check(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n     * Remove all unnecessary prefixes\n     */\n  ;\n\n  _proto.remove = function remove(nodes, all) {\n    var i = 0;\n\n    while (i < nodes.length) {\n      if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {\n        if (this.toRemove(nodes[i][0], all)) {\n          nodes.splice(i, 2);\n          continue;\n        }\n\n        i += 2;\n        continue;\n      }\n\n      if (typeof nodes[i] === 'object') {\n        nodes[i] = this.remove(nodes[i], all);\n      }\n\n      i += 1;\n    }\n\n    return nodes;\n  }\n  /**\n     * Clean brackets with one child\n     */\n  ;\n\n  _proto.cleanBrackets = function cleanBrackets(nodes) {\n    var _this = this;\n\n    return nodes.map(function (i) {\n      if (typeof i !== 'object') {\n        return i;\n      }\n\n      if (i.length === 1 && typeof i[0] === 'object') {\n        return _this.cleanBrackets(i[0]);\n      }\n\n      return _this.cleanBrackets(i);\n    });\n  }\n  /**\n     * Add \" or \" between properties and convert it to brackets format\n     */\n  ;\n\n  _proto.convert = function convert(progress) {\n    var result = [''];\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(progress), _step4; !(_step4 = _iterator4()).done;) {\n      var i = _step4.value;\n      result.push([i.prop + \": \" + i.value]);\n      result.push(' or ');\n    }\n\n    result[result.length - 1] = '';\n    return result;\n  }\n  /**\n     * Compress value functions into a string nodes\n     */\n  ;\n\n  _proto.normalize = function normalize(nodes) {\n    var _this2 = this;\n\n    if (typeof nodes !== 'object') {\n      return nodes;\n    }\n\n    nodes = nodes.filter(function (i) {\n      return i !== '';\n    });\n\n    if (typeof nodes[0] === 'string' && nodes[0].includes(':')) {\n      return [brackets.stringify(nodes)];\n    }\n\n    return nodes.map(function (i) {\n      return _this2.normalize(i);\n    });\n  }\n  /**\n     * Add prefixes\n     */\n  ;\n\n  _proto.add = function add(nodes, all) {\n    var _this3 = this;\n\n    return nodes.map(function (i) {\n      if (_this3.isProp(i)) {\n        var prefixed = _this3.prefixed(i[0]);\n\n        if (prefixed.length > 1) {\n          return _this3.convert(prefixed);\n        }\n\n        return i;\n      }\n\n      if (typeof i === 'object') {\n        return _this3.add(i, all);\n      }\n\n      return i;\n    });\n  }\n  /**\n     * Add prefixed declaration\n     */\n  ;\n\n  _proto.process = function process(rule) {\n    var ast = brackets.parse(rule.params);\n    ast = this.normalize(ast);\n    ast = this.remove(ast, rule.params);\n    ast = this.add(ast, rule.params);\n    ast = this.cleanBrackets(ast);\n    rule.params = brackets.stringify(ast);\n  }\n  /**\n     * Check global options\n     */\n  ;\n\n  _proto.disabled = function disabled(node) {\n    if (!this.all.options.grid) {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true;\n      }\n\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true;\n      }\n    }\n\n    if (this.all.options.flexbox === false) {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true;\n      }\n\n      var other = ['order', 'justify-content', 'align-items', 'align-content'];\n\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return Supports;\n}();\n\nmodule.exports = Supports;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/autoprefixer/lib/supports.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}}],"sources":{"node_modules/autoprefixer/lib/supports.js":"\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar postcss = require('postcss');\n\nvar data = require('caniuse-lite').feature(require('caniuse-lite/data/features/css-featurequeries.js'));\n\nvar Browsers = require('./browsers');\n\nvar brackets = require('./brackets');\n\nvar Value = require('./value');\n\nvar utils = require('./utils');\n\nvar supported = [];\n\nfor (var browser in data.stats) {\n  var versions = data.stats[browser];\n\n  for (var version in versions) {\n    var support = versions[version];\n\n    if (/y/.test(support)) {\n      supported.push(browser + ' ' + version);\n    }\n  }\n}\n\nvar Supports = /*#__PURE__*/function () {\n  function Supports(Prefixes, all) {\n    this.Prefixes = Prefixes;\n    this.all = all;\n  }\n  /**\n     * Return prefixer only with @supports supported browsers\n     */\n\n\n  var _proto = Supports.prototype;\n\n  _proto.prefixer = function prefixer() {\n    if (this.prefixerCache) {\n      return this.prefixerCache;\n    }\n\n    var filtered = this.all.browsers.selected.filter(function (i) {\n      return supported.includes(i);\n    });\n    var browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);\n    this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);\n    return this.prefixerCache;\n  }\n  /**\n     * Parse string into declaration property and value\n     */\n  ;\n\n  _proto.parse = function parse(str) {\n    var parts = str.split(':');\n    var prop = parts[0];\n    var value = parts[1];\n    if (!value) value = '';\n    return [prop.trim(), value.trim()];\n  }\n  /**\n     * Create virtual rule to process it by prefixer\n     */\n  ;\n\n  _proto.virtual = function virtual(str) {\n    var _this$parse = this.parse(str),\n        prop = _this$parse[0],\n        value = _this$parse[1];\n\n    var rule = postcss.parse('a{}').first;\n    rule.append({\n      prop: prop,\n      value: value,\n      raws: {\n        before: ''\n      }\n    });\n    return rule;\n  }\n  /**\n     * Return array of Declaration with all necessary prefixes\n     */\n  ;\n\n  _proto.prefixed = function prefixed(str) {\n    var rule = this.virtual(str);\n\n    if (this.disabled(rule.first)) {\n      return rule.nodes;\n    }\n\n    var result = {\n      warn: function warn() {\n        return null;\n      }\n    };\n    var prefixer = this.prefixer().add[rule.first.prop];\n    prefixer && prefixer.process && prefixer.process(rule.first, result);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(rule.nodes), _step; !(_step = _iterator()).done;) {\n      var decl = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.prefixer().values('add', rule.first.prop)), _step2; !(_step2 = _iterator2()).done;) {\n        var value = _step2.value;\n        value.process(decl);\n      }\n\n      Value.save(this.all, decl);\n    }\n\n    return rule.nodes;\n  }\n  /**\n     * Return true if brackets node is \"not\" word\n     */\n  ;\n\n  _proto.isNot = function isNot(node) {\n    return typeof node === 'string' && /not\\s*/i.test(node);\n  }\n  /**\n     * Return true if brackets node is \"or\" word\n     */\n  ;\n\n  _proto.isOr = function isOr(node) {\n    return typeof node === 'string' && /\\s*or\\s*/i.test(node);\n  }\n  /**\n     * Return true if brackets node is (prop: value)\n     */\n  ;\n\n  _proto.isProp = function isProp(node) {\n    return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';\n  }\n  /**\n     * Return true if prefixed property has no unprefixed\n     */\n  ;\n\n  _proto.isHack = function isHack(all, unprefixed) {\n    var check = new RegExp(\"(\\\\(|\\\\s)\" + utils.escapeRegexp(unprefixed) + \":\");\n    return !check.test(all);\n  }\n  /**\n     * Return true if we need to remove node\n     */\n  ;\n\n  _proto.toRemove = function toRemove(str, all) {\n    var _this$parse2 = this.parse(str),\n        prop = _this$parse2[0],\n        value = _this$parse2[1];\n\n    var unprefixed = this.all.unprefixed(prop);\n    var cleaner = this.all.cleaner();\n\n    if (cleaner.remove[prop] && cleaner.remove[prop].remove && !this.isHack(all, unprefixed)) {\n      return true;\n    }\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(cleaner.values('remove', unprefixed)), _step3; !(_step3 = _iterator3()).done;) {\n      var checker = _step3.value;\n\n      if (checker.check(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n     * Remove all unnecessary prefixes\n     */\n  ;\n\n  _proto.remove = function remove(nodes, all) {\n    var i = 0;\n\n    while (i < nodes.length) {\n      if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {\n        if (this.toRemove(nodes[i][0], all)) {\n          nodes.splice(i, 2);\n          continue;\n        }\n\n        i += 2;\n        continue;\n      }\n\n      if (typeof nodes[i] === 'object') {\n        nodes[i] = this.remove(nodes[i], all);\n      }\n\n      i += 1;\n    }\n\n    return nodes;\n  }\n  /**\n     * Clean brackets with one child\n     */\n  ;\n\n  _proto.cleanBrackets = function cleanBrackets(nodes) {\n    var _this = this;\n\n    return nodes.map(function (i) {\n      if (typeof i !== 'object') {\n        return i;\n      }\n\n      if (i.length === 1 && typeof i[0] === 'object') {\n        return _this.cleanBrackets(i[0]);\n      }\n\n      return _this.cleanBrackets(i);\n    });\n  }\n  /**\n     * Add \" or \" between properties and convert it to brackets format\n     */\n  ;\n\n  _proto.convert = function convert(progress) {\n    var result = [''];\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(progress), _step4; !(_step4 = _iterator4()).done;) {\n      var i = _step4.value;\n      result.push([i.prop + \": \" + i.value]);\n      result.push(' or ');\n    }\n\n    result[result.length - 1] = '';\n    return result;\n  }\n  /**\n     * Compress value functions into a string nodes\n     */\n  ;\n\n  _proto.normalize = function normalize(nodes) {\n    var _this2 = this;\n\n    if (typeof nodes !== 'object') {\n      return nodes;\n    }\n\n    nodes = nodes.filter(function (i) {\n      return i !== '';\n    });\n\n    if (typeof nodes[0] === 'string' && nodes[0].includes(':')) {\n      return [brackets.stringify(nodes)];\n    }\n\n    return nodes.map(function (i) {\n      return _this2.normalize(i);\n    });\n  }\n  /**\n     * Add prefixes\n     */\n  ;\n\n  _proto.add = function add(nodes, all) {\n    var _this3 = this;\n\n    return nodes.map(function (i) {\n      if (_this3.isProp(i)) {\n        var prefixed = _this3.prefixed(i[0]);\n\n        if (prefixed.length > 1) {\n          return _this3.convert(prefixed);\n        }\n\n        return i;\n      }\n\n      if (typeof i === 'object') {\n        return _this3.add(i, all);\n      }\n\n      return i;\n    });\n  }\n  /**\n     * Add prefixed declaration\n     */\n  ;\n\n  _proto.process = function process(rule) {\n    var ast = brackets.parse(rule.params);\n    ast = this.normalize(ast);\n    ast = this.remove(ast, rule.params);\n    ast = this.add(ast, rule.params);\n    ast = this.cleanBrackets(ast);\n    rule.params = brackets.stringify(ast);\n  }\n  /**\n     * Check global options\n     */\n  ;\n\n  _proto.disabled = function disabled(node) {\n    if (!this.all.options.grid) {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true;\n      }\n\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true;\n      }\n    }\n\n    if (this.all.options.flexbox === false) {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true;\n      }\n\n      var other = ['order', 'justify-content', 'align-items', 'align-content'];\n\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return Supports;\n}();\n\nmodule.exports = Supports;"},"lineCount":346}},"error":null,"hash":"f3d23a5b4fecb7bfcb37e373a3af9271","cacheData":{"env":{}}}