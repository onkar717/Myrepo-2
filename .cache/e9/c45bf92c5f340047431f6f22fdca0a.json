{"id":"node_modules/autoprefixer/lib/hacks/place-self.js","dependencies":[{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/package.json","includedInParent":true,"mtime":1700575589017},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/.babelrc","includedInParent":true,"mtime":1699718964356},{"name":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1699760093511},{"name":"../declaration","loc":{"line":9,"column":26,"index":761},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/place-self.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/declaration.js"},{"name":"./grid-utils","loc":{"line":11,"column":20,"index":801},"parent":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/place-self.js","resolved":"/home/omkar/Desktop/Material/Reactjs_Projects/Crud_Reactjs/node_modules/autoprefixer/lib/hacks/grid-utils.js"}],"generated":{"js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Declaration = require('../declaration');\n\nvar utils = require('./grid-utils');\n\nvar PlaceSelf = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(PlaceSelf, _Declaration);\n\n  function PlaceSelf() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = PlaceSelf.prototype;\n\n  /**\n   * Translate place-self to separate -ms- prefixed properties\n   */\n  _proto.insert = function insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes); // prevent doubling of prefixes\n\n    if (decl.parent.some(function (i) {\n      return i.prop === '-ms-grid-row-align';\n    })) {\n      return undefined;\n    }\n\n    var _utils$parse = utils.parse(decl),\n        _utils$parse$ = _utils$parse[0],\n        first = _utils$parse$[0],\n        second = _utils$parse$[1];\n\n    if (second) {\n      utils.insertDecl(decl, 'grid-row-align', first);\n      utils.insertDecl(decl, 'grid-column-align', second);\n    } else {\n      utils.insertDecl(decl, 'grid-row-align', first);\n      utils.insertDecl(decl, 'grid-column-align', first);\n    }\n\n    return undefined;\n  };\n\n  return PlaceSelf;\n}(Declaration);\n\n_defineProperty(PlaceSelf, \"names\", ['place-self']);\n\nmodule.exports = PlaceSelf;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/autoprefixer/lib/hacks/place-self.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/autoprefixer/lib/hacks/place-self.js":"\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Declaration = require('../declaration');\n\nvar utils = require('./grid-utils');\n\nvar PlaceSelf = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(PlaceSelf, _Declaration);\n\n  function PlaceSelf() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = PlaceSelf.prototype;\n\n  /**\n   * Translate place-self to separate -ms- prefixed properties\n   */\n  _proto.insert = function insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes); // prevent doubling of prefixes\n\n    if (decl.parent.some(function (i) {\n      return i.prop === '-ms-grid-row-align';\n    })) {\n      return undefined;\n    }\n\n    var _utils$parse = utils.parse(decl),\n        _utils$parse$ = _utils$parse[0],\n        first = _utils$parse$[0],\n        second = _utils$parse$[1];\n\n    if (second) {\n      utils.insertDecl(decl, 'grid-row-align', first);\n      utils.insertDecl(decl, 'grid-column-align', second);\n    } else {\n      utils.insertDecl(decl, 'grid-row-align', first);\n      utils.insertDecl(decl, 'grid-column-align', first);\n    }\n\n    return undefined;\n  };\n\n  return PlaceSelf;\n}(Declaration);\n\n_defineProperty(PlaceSelf, \"names\", ['place-self']);\n\nmodule.exports = PlaceSelf;"},"lineCount":55}},"error":null,"hash":"53bd6d8339924cfa9ca3ceb86a7e362f","cacheData":{"env":{}}}